rov_model.STL
*.asv
*.mat
*.gif
*.key
# MATLAB
# Compiled output
*.mex*
*.p
*.o
*.obj
*.lib
*.dll
*.dylib
*.so
*.exe
*.app
*.bundle

# MATLAB-generated files
*.asv            # Auto-save files
*.autosave       # Auto-save files (newer versions)
*~               # Backup files (often from editor)
*.bak            # Backup files
*.log            # Log files (e.g., diary, profiler)
*.lof            # List of figures files
*.lot            # List of tables files
*.tds            # TeX Document Structure files
*.bbl            # BibTeX bibliography file
*.blg            # BibTeX log file
*.idx            # Index files
*.ind            # Index files
*.ilg            # Index log files
*.aux            # Auxiliary files (LaTeX)
*.toc            # Table of Contents files (LaTeX)
*.scc            # Source Code Control file
*.DS_Store       # Mac OS X folder attributes
*.orig           # Mercurial backup files

# MATLAB specific folders
slprj/           # Simulink project folder
_build/          # MATLAB Coder build folder
codegen/         # MATLAB Coder output folder
.SimulinkCache/  # Simulink cache files
.DS_Store

# MATLAB preferences and history
matlabprefs.mat
MATLAB_Editor_State.xml
MATLAB_View_State.xml
History.xml
CurrentFolder.xml
matlab.prf       # Preferences folder (older versions)
# Can be user-specific, consider if sharing these is okay
# cfprefs.dat
# javaclasspath.txt
# javaliÂ­brarypath.txt
# pathdef.m     # Be careful with this one. Sometimes it's project-specific
                # and should be versioned. If it's user-specific, ignore it.

# MATLAB Projects
*.mlproject      # Sometimes user-specific parts, but often core to the project
# Decide based on your workflow if *.mlproject itself should be ignored or parts of it.
# If the .mlproject file is mostly machine-specific paths, you might want to ignore it.
# If it defines project structure essential for others, commit it.
*.mlproject.user # User-specific project settings - definitely ignore

# Simulink Models and related files
# Already covered by slprj/ and .SimulinkCache/
# But if you have specific auto-generated model files outside these, add them.
# *.slx.autosave
# *.mdl.autosave

# Test results / Coverage reports
coverage_results/
test_results/
*.html # If test reports are HTML
*.xml  # If test reports are XML (e.g., JUnit format)
*.tap  # Test Anything Protocol files

# Large data files (consider Git LFS for these if they need to be versioned)
*.mat
# If you have specific .mat files that are small and *should* be versioned (e.g., configuration),
# you can un-ignore them:
# !my_config_data.mat
# !testTrajectory_nu_split.mat # Example from your project if it's generated and needed for tests by others

# Temporary files
tmp/
temp/

# Environment specific
.env

# IDE specific
.vscode/
.idea/

# Packaged apps / toolboxes
*.mlappinstall
*.mltbx

# Your specific generated files from the README
kinematic_test_trajectory.gif
# testTrajectory_nu_split.mat # Already discussed above; if it's purely intermediate, ignore.
                              # If it's a necessary input for other steps for collaborators, commit it or use LFS.
                              # Given it's generated by makeTestTrajectory, it's likely intermediate.